// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: PushDataV3ApiWrapper.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushDataV3ApiWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// 频道
	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// *
	// 数据，NOTE：因为不能重复，所以类型和变量名尽量使用全名
	//
	// Types that are assignable to Body:
	//
	//	*PushDataV3ApiWrapper_PublicDeals
	//	*PushDataV3ApiWrapper_PublicIncreaseDepths
	//	*PushDataV3ApiWrapper_PublicLimitDepths
	//	*PushDataV3ApiWrapper_PrivateOrders
	//	*PushDataV3ApiWrapper_PublicBookTicker
	//	*PushDataV3ApiWrapper_PrivateDeals
	//	*PushDataV3ApiWrapper_PrivateAccount
	//	*PushDataV3ApiWrapper_PublicSpotKline
	//	*PushDataV3ApiWrapper_PublicMiniTicker
	//	*PushDataV3ApiWrapper_PublicMiniTickers
	//	*PushDataV3ApiWrapper_PublicBookTickerBatch
	//	*PushDataV3ApiWrapper_PublicIncreaseDepthsBatch
	//	*PushDataV3ApiWrapper_PublicAggreDepths
	//	*PushDataV3ApiWrapper_PublicAggreDeals
	//	*PushDataV3ApiWrapper_PublicAggreBookTicker
	Body isPushDataV3ApiWrapper_Body `protobuf_oneof:"body"`
	// *
	// 交易对
	Symbol *string `protobuf:"bytes,3,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	// *
	// 交易对ID
	SymbolId *string `protobuf:"bytes,4,opt,name=symbolId,proto3,oneof" json:"symbolId,omitempty"`
	// *
	// 消息生成时间
	CreateTime *int64 `protobuf:"varint,5,opt,name=createTime,proto3,oneof" json:"createTime,omitempty"`
	// *
	// 消息推送时间
	SendTime *int64 `protobuf:"varint,6,opt,name=sendTime,proto3,oneof" json:"sendTime,omitempty"`
}

func (x *PushDataV3ApiWrapper) Reset() {
	*x = PushDataV3ApiWrapper{}
	mi := &file_PushDataV3ApiWrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushDataV3ApiWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDataV3ApiWrapper) ProtoMessage() {}

func (x *PushDataV3ApiWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_PushDataV3ApiWrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDataV3ApiWrapper.ProtoReflect.Descriptor instead.
func (*PushDataV3ApiWrapper) Descriptor() ([]byte, []int) {
	return file_PushDataV3ApiWrapper_proto_rawDescGZIP(), []int{0}
}

func (x *PushDataV3ApiWrapper) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (m *PushDataV3ApiWrapper) GetBody() isPushDataV3ApiWrapper_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicDeals() *PublicDealsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicDeals); ok {
		return x.PublicDeals
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicIncreaseDepths() *PublicIncreaseDepthsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicIncreaseDepths); ok {
		return x.PublicIncreaseDepths
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicLimitDepths() *PublicLimitDepthsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicLimitDepths); ok {
		return x.PublicLimitDepths
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPrivateOrders() *PrivateOrdersV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PrivateOrders); ok {
		return x.PrivateOrders
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicBookTicker() *PublicBookTickerV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicBookTicker); ok {
		return x.PublicBookTicker
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPrivateDeals() *PrivateDealsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PrivateDeals); ok {
		return x.PrivateDeals
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPrivateAccount() *PrivateAccountV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PrivateAccount); ok {
		return x.PrivateAccount
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicSpotKline() *PublicSpotKlineV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicSpotKline); ok {
		return x.PublicSpotKline
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicMiniTicker() *PublicMiniTickerV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicMiniTicker); ok {
		return x.PublicMiniTicker
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicMiniTickers() *PublicMiniTickersV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicMiniTickers); ok {
		return x.PublicMiniTickers
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicBookTickerBatch() *PublicBookTickerBatchV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicBookTickerBatch); ok {
		return x.PublicBookTickerBatch
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicIncreaseDepthsBatch() *PublicIncreaseDepthsBatchV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicIncreaseDepthsBatch); ok {
		return x.PublicIncreaseDepthsBatch
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicAggreDepths() *PublicAggreDepthsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicAggreDepths); ok {
		return x.PublicAggreDepths
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicAggreDeals() *PublicAggreDealsV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicAggreDeals); ok {
		return x.PublicAggreDeals
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicAggreBookTicker() *PublicAggreBookTickerV3Api {
	if x, ok := x.GetBody().(*PushDataV3ApiWrapper_PublicAggreBookTicker); ok {
		return x.PublicAggreBookTicker
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *PushDataV3ApiWrapper) GetSymbolId() string {
	if x != nil && x.SymbolId != nil {
		return *x.SymbolId
	}
	return ""
}

func (x *PushDataV3ApiWrapper) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *PushDataV3ApiWrapper) GetSendTime() int64 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

type isPushDataV3ApiWrapper_Body interface {
	isPushDataV3ApiWrapper_Body()
}

type PushDataV3ApiWrapper_PublicDeals struct {
	PublicDeals *PublicDealsV3Api `protobuf:"bytes,301,opt,name=publicDeals,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicIncreaseDepths struct {
	PublicIncreaseDepths *PublicIncreaseDepthsV3Api `protobuf:"bytes,302,opt,name=publicIncreaseDepths,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicLimitDepths struct {
	PublicLimitDepths *PublicLimitDepthsV3Api `protobuf:"bytes,303,opt,name=publicLimitDepths,proto3,oneof"`
}

type PushDataV3ApiWrapper_PrivateOrders struct {
	PrivateOrders *PrivateOrdersV3Api `protobuf:"bytes,304,opt,name=privateOrders,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicBookTicker struct {
	PublicBookTicker *PublicBookTickerV3Api `protobuf:"bytes,305,opt,name=publicBookTicker,proto3,oneof"`
}

type PushDataV3ApiWrapper_PrivateDeals struct {
	PrivateDeals *PrivateDealsV3Api `protobuf:"bytes,306,opt,name=privateDeals,proto3,oneof"`
}

type PushDataV3ApiWrapper_PrivateAccount struct {
	PrivateAccount *PrivateAccountV3Api `protobuf:"bytes,307,opt,name=privateAccount,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicSpotKline struct {
	PublicSpotKline *PublicSpotKlineV3Api `protobuf:"bytes,308,opt,name=publicSpotKline,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicMiniTicker struct {
	PublicMiniTicker *PublicMiniTickerV3Api `protobuf:"bytes,309,opt,name=publicMiniTicker,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicMiniTickers struct {
	PublicMiniTickers *PublicMiniTickersV3Api `protobuf:"bytes,310,opt,name=publicMiniTickers,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicBookTickerBatch struct {
	PublicBookTickerBatch *PublicBookTickerBatchV3Api `protobuf:"bytes,311,opt,name=publicBookTickerBatch,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicIncreaseDepthsBatch struct {
	PublicIncreaseDepthsBatch *PublicIncreaseDepthsBatchV3Api `protobuf:"bytes,312,opt,name=publicIncreaseDepthsBatch,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicAggreDepths struct {
	PublicAggreDepths *PublicAggreDepthsV3Api `protobuf:"bytes,313,opt,name=publicAggreDepths,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicAggreDeals struct {
	PublicAggreDeals *PublicAggreDealsV3Api `protobuf:"bytes,314,opt,name=publicAggreDeals,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicAggreBookTicker struct {
	PublicAggreBookTicker *PublicAggreBookTickerV3Api `protobuf:"bytes,315,opt,name=publicAggreBookTicker,proto3,oneof"`
}

func (*PushDataV3ApiWrapper_PublicDeals) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicIncreaseDepths) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicLimitDepths) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PrivateOrders) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicBookTicker) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PrivateDeals) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PrivateAccount) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicSpotKline) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicMiniTicker) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicMiniTickers) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicBookTickerBatch) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicIncreaseDepthsBatch) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicAggreDepths) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicAggreDeals) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicAggreBookTicker) isPushDataV3ApiWrapper_Body() {}

var File_PushDataV3ApiWrapper_proto protoreflect.FileDescriptor

var file_PushDataV3ApiWrapper_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x50, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x56, 0x33, 0x41, 0x70, 0x69, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x56,
	0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x33, 0x41, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d,
	0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x6f,
	0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x56, 0x33, 0x41, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73,
	0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x33, 0x41,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x0a, 0x0a, 0x14, 0x50,
	0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x56, 0x33, 0x41, 0x70, 0x69, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x18, 0xad, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x61, 0x6c,
	0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x44, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x18, 0xae, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69,
	0x48, 0x00, 0x52, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x18, 0xaf, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52,
	0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48,
	0x00, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x45, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x33,
	0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x6f,
	0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x33, 0x41,
	0x70, 0x69, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61,
	0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0xb3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x33, 0x41, 0x70,
	0x69, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f,
	0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0xb4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x56,
	0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70,
	0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0xb5, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x10, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x48,
	0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0xb6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x56, 0x33,
	0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x69, 0x6e,
	0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x18, 0xb7, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42,
	0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x60,
	0x0a, 0x19, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x18, 0xb8, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x56, 0x33,
	0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x19, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x48, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x73, 0x18, 0xb9, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73,
	0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x18, 0xba,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00, 0x52,
	0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x44, 0x65, 0x61, 0x6c,
	0x73, 0x12, 0x54, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0xbb, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x33, 0x41, 0x70, 0x69, 0x48, 0x00,
	0x52, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x3d, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x78, 0x63, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x19, 0x50, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x33, 0x41, 0x70, 0x69, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PushDataV3ApiWrapper_proto_rawDescOnce sync.Once
	file_PushDataV3ApiWrapper_proto_rawDescData = file_PushDataV3ApiWrapper_proto_rawDesc
)

func file_PushDataV3ApiWrapper_proto_rawDescGZIP() []byte {
	file_PushDataV3ApiWrapper_proto_rawDescOnce.Do(func() {
		file_PushDataV3ApiWrapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_PushDataV3ApiWrapper_proto_rawDescData)
	})
	return file_PushDataV3ApiWrapper_proto_rawDescData
}

var file_PushDataV3ApiWrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_PushDataV3ApiWrapper_proto_goTypes = []any{
	(*PushDataV3ApiWrapper)(nil),           // 0: PushDataV3ApiWrapper
	(*PublicDealsV3Api)(nil),               // 1: PublicDealsV3Api
	(*PublicIncreaseDepthsV3Api)(nil),      // 2: PublicIncreaseDepthsV3Api
	(*PublicLimitDepthsV3Api)(nil),         // 3: PublicLimitDepthsV3Api
	(*PrivateOrdersV3Api)(nil),             // 4: PrivateOrdersV3Api
	(*PublicBookTickerV3Api)(nil),          // 5: PublicBookTickerV3Api
	(*PrivateDealsV3Api)(nil),              // 6: PrivateDealsV3Api
	(*PrivateAccountV3Api)(nil),            // 7: PrivateAccountV3Api
	(*PublicSpotKlineV3Api)(nil),           // 8: PublicSpotKlineV3Api
	(*PublicMiniTickerV3Api)(nil),          // 9: PublicMiniTickerV3Api
	(*PublicMiniTickersV3Api)(nil),         // 10: PublicMiniTickersV3Api
	(*PublicBookTickerBatchV3Api)(nil),     // 11: PublicBookTickerBatchV3Api
	(*PublicIncreaseDepthsBatchV3Api)(nil), // 12: PublicIncreaseDepthsBatchV3Api
	(*PublicAggreDepthsV3Api)(nil),         // 13: PublicAggreDepthsV3Api
	(*PublicAggreDealsV3Api)(nil),          // 14: PublicAggreDealsV3Api
	(*PublicAggreBookTickerV3Api)(nil),     // 15: PublicAggreBookTickerV3Api
}
var file_PushDataV3ApiWrapper_proto_depIdxs = []int32{
	1,  // 0: PushDataV3ApiWrapper.publicDeals:type_name -> PublicDealsV3Api
	2,  // 1: PushDataV3ApiWrapper.publicIncreaseDepths:type_name -> PublicIncreaseDepthsV3Api
	3,  // 2: PushDataV3ApiWrapper.publicLimitDepths:type_name -> PublicLimitDepthsV3Api
	4,  // 3: PushDataV3ApiWrapper.privateOrders:type_name -> PrivateOrdersV3Api
	5,  // 4: PushDataV3ApiWrapper.publicBookTicker:type_name -> PublicBookTickerV3Api
	6,  // 5: PushDataV3ApiWrapper.privateDeals:type_name -> PrivateDealsV3Api
	7,  // 6: PushDataV3ApiWrapper.privateAccount:type_name -> PrivateAccountV3Api
	8,  // 7: PushDataV3ApiWrapper.publicSpotKline:type_name -> PublicSpotKlineV3Api
	9,  // 8: PushDataV3ApiWrapper.publicMiniTicker:type_name -> PublicMiniTickerV3Api
	10, // 9: PushDataV3ApiWrapper.publicMiniTickers:type_name -> PublicMiniTickersV3Api
	11, // 10: PushDataV3ApiWrapper.publicBookTickerBatch:type_name -> PublicBookTickerBatchV3Api
	12, // 11: PushDataV3ApiWrapper.publicIncreaseDepthsBatch:type_name -> PublicIncreaseDepthsBatchV3Api
	13, // 12: PushDataV3ApiWrapper.publicAggreDepths:type_name -> PublicAggreDepthsV3Api
	14, // 13: PushDataV3ApiWrapper.publicAggreDeals:type_name -> PublicAggreDealsV3Api
	15, // 14: PushDataV3ApiWrapper.publicAggreBookTicker:type_name -> PublicAggreBookTickerV3Api
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_PushDataV3ApiWrapper_proto_init() }
func file_PushDataV3ApiWrapper_proto_init() {
	if File_PushDataV3ApiWrapper_proto != nil {
		return
	}
	file_PublicDealsV3Api_proto_init()
	file_PublicIncreaseDepthsV3Api_proto_init()
	file_PublicLimitDepthsV3Api_proto_init()
	file_PrivateOrdersV3Api_proto_init()
	file_PublicBookTickerV3Api_proto_init()
	file_PrivateDealsV3Api_proto_init()
	file_PrivateAccountV3Api_proto_init()
	file_PublicSpotKlineV3Api_proto_init()
	file_PublicMiniTickerV3Api_proto_init()
	file_PublicMiniTickersV3Api_proto_init()
	file_PublicBookTickerBatchV3Api_proto_init()
	file_PublicIncreaseDepthsBatchV3Api_proto_init()
	file_PublicAggreDepthsV3Api_proto_init()
	file_PublicAggreDealsV3Api_proto_init()
	file_PublicAggreBookTickerV3Api_proto_init()
	file_PushDataV3ApiWrapper_proto_msgTypes[0].OneofWrappers = []any{
		(*PushDataV3ApiWrapper_PublicDeals)(nil),
		(*PushDataV3ApiWrapper_PublicIncreaseDepths)(nil),
		(*PushDataV3ApiWrapper_PublicLimitDepths)(nil),
		(*PushDataV3ApiWrapper_PrivateOrders)(nil),
		(*PushDataV3ApiWrapper_PublicBookTicker)(nil),
		(*PushDataV3ApiWrapper_PrivateDeals)(nil),
		(*PushDataV3ApiWrapper_PrivateAccount)(nil),
		(*PushDataV3ApiWrapper_PublicSpotKline)(nil),
		(*PushDataV3ApiWrapper_PublicMiniTicker)(nil),
		(*PushDataV3ApiWrapper_PublicMiniTickers)(nil),
		(*PushDataV3ApiWrapper_PublicBookTickerBatch)(nil),
		(*PushDataV3ApiWrapper_PublicIncreaseDepthsBatch)(nil),
		(*PushDataV3ApiWrapper_PublicAggreDepths)(nil),
		(*PushDataV3ApiWrapper_PublicAggreDeals)(nil),
		(*PushDataV3ApiWrapper_PublicAggreBookTicker)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PushDataV3ApiWrapper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PushDataV3ApiWrapper_proto_goTypes,
		DependencyIndexes: file_PushDataV3ApiWrapper_proto_depIdxs,
		MessageInfos:      file_PushDataV3ApiWrapper_proto_msgTypes,
	}.Build()
	File_PushDataV3ApiWrapper_proto = out.File
	file_PushDataV3ApiWrapper_proto_rawDesc = nil
	file_PushDataV3ApiWrapper_proto_goTypes = nil
	file_PushDataV3ApiWrapper_proto_depIdxs = nil
}
