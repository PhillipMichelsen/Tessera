// spot@public.kline.v3.api.pb@<symbol>@<interval>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: PublicSpotKlineV3Api.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublicSpotKlineV3Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// K线周期(Min1,Min5,Min15,Min30,Min60,Hour4,Hour8,Day1,Week1,Month1)
	Interval string `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// 窗口开始时间戳(秒时间戳)
	WindowStart int64 `protobuf:"varint,2,opt,name=windowStart,proto3" json:"windowStart,omitempty"`
	// 开盘价
	OpeningPrice string `protobuf:"bytes,3,opt,name=openingPrice,proto3" json:"openingPrice,omitempty"`
	// 收盘价
	ClosingPrice string `protobuf:"bytes,4,opt,name=closingPrice,proto3" json:"closingPrice,omitempty"`
	// 最高价
	HighestPrice string `protobuf:"bytes,5,opt,name=highestPrice,proto3" json:"highestPrice,omitempty"`
	// 最低价
	LowestPrice string `protobuf:"bytes,6,opt,name=lowestPrice,proto3" json:"lowestPrice,omitempty"`
	// 成交量
	Volume string `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	// 成交额
	Amount string `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	// 窗口结束时间戳(秒时间戳)
	WindowEnd int64 `protobuf:"varint,9,opt,name=windowEnd,proto3" json:"windowEnd,omitempty"`
}

func (x *PublicSpotKlineV3Api) Reset() {
	*x = PublicSpotKlineV3Api{}
	mi := &file_PublicSpotKlineV3Api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicSpotKlineV3Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicSpotKlineV3Api) ProtoMessage() {}

func (x *PublicSpotKlineV3Api) ProtoReflect() protoreflect.Message {
	mi := &file_PublicSpotKlineV3Api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicSpotKlineV3Api.ProtoReflect.Descriptor instead.
func (*PublicSpotKlineV3Api) Descriptor() ([]byte, []int) {
	return file_PublicSpotKlineV3Api_proto_rawDescGZIP(), []int{0}
}

func (x *PublicSpotKlineV3Api) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetWindowStart() int64 {
	if x != nil {
		return x.WindowStart
	}
	return 0
}

func (x *PublicSpotKlineV3Api) GetOpeningPrice() string {
	if x != nil {
		return x.OpeningPrice
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetClosingPrice() string {
	if x != nil {
		return x.ClosingPrice
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetHighestPrice() string {
	if x != nil {
		return x.HighestPrice
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetLowestPrice() string {
	if x != nil {
		return x.LowestPrice
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PublicSpotKlineV3Api) GetWindowEnd() int64 {
	if x != nil {
		return x.WindowEnd
	}
	return 0
}

var File_PublicSpotKlineV3Api_proto protoreflect.FileDescriptor

var file_PublicSpotKlineV3Api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x56, 0x33, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a,
	0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65,
	0x56, 0x33, 0x41, 0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x42,
	0x3d, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x78, 0x63, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42,
	0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x6f, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65,
	0x56, 0x33, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PublicSpotKlineV3Api_proto_rawDescOnce sync.Once
	file_PublicSpotKlineV3Api_proto_rawDescData = file_PublicSpotKlineV3Api_proto_rawDesc
)

func file_PublicSpotKlineV3Api_proto_rawDescGZIP() []byte {
	file_PublicSpotKlineV3Api_proto_rawDescOnce.Do(func() {
		file_PublicSpotKlineV3Api_proto_rawDescData = protoimpl.X.CompressGZIP(file_PublicSpotKlineV3Api_proto_rawDescData)
	})
	return file_PublicSpotKlineV3Api_proto_rawDescData
}

var file_PublicSpotKlineV3Api_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_PublicSpotKlineV3Api_proto_goTypes = []any{
	(*PublicSpotKlineV3Api)(nil), // 0: PublicSpotKlineV3Api
}
var file_PublicSpotKlineV3Api_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_PublicSpotKlineV3Api_proto_init() }
func file_PublicSpotKlineV3Api_proto_init() {
	if File_PublicSpotKlineV3Api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PublicSpotKlineV3Api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PublicSpotKlineV3Api_proto_goTypes,
		DependencyIndexes: file_PublicSpotKlineV3Api_proto_depIdxs,
		MessageInfos:      file_PublicSpotKlineV3Api_proto_msgTypes,
	}.Build()
	File_PublicSpotKlineV3Api_proto = out.File
	file_PublicSpotKlineV3Api_proto_rawDesc = nil
	file_PublicSpotKlineV3Api_proto_goTypes = nil
	file_PublicSpotKlineV3Api_proto_depIdxs = nil
}
